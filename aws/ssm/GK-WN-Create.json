{
  "schemaVersion":"2.0",
  "description":"Script for GateKeeper to add temp user from Windows instance.",
  "parameters":{
    "opsEmail":{
      "type":"String",
      "description":"(Required) Ops email."

    },
    "teamEmail":{
      "type":"String",
      "description":"(Required) Team email."

    },
    "userId":{
      "type":"String",
      "description":"(Required) The userid of the user to be added.",
      "maxChars":64
    },
    "userEmail":{
      "type":"String",
      "description":"(Required) The email of the user to be added.",
      "maxChars":64
    },
    "userName":{
      "type":"String",
      "description":"(Required) The name of the user being added.",
      "maxChars":64
    },
    "account":{
      "type":"String",
      "description":"(Required) The account this instance is in (used for email).",
      "maxChars":64
    },
    "mailFrom":{
      "type":"String",
      "description":"(Required) Who the email will be from. Changes between dev, qa and prod for testing.",
      "maxChars":64
    },
    "smtpServer":{
      "type":"String",
      "default":"<PROVIDE_SMTP_SERVER_HERE!!>",
      "description":"(Required) Server to be used to send the emails out.",
      "maxChars":64
    },
    "hours":{
      "type":"String",
      "description":"(Required) The requested hours (used for email)",
      "allowedPattern":"([1-9][0-9]{0,3})|(1[0-9]{1,4})|(2[0-7][0-9]{1,3})|(28[0-7][0-9]{1,2})|(28800)",
      "maxChars":64
    },
    "accessRequest":{
      "type":"String",
      "description":"(Required) The access request number used to help distinguish emails",
      "allowedPattern":"([1-9][0-9]{0,3})|(1[0-9]{1,4})|(2[0-7][0-9]{1,3})|(28[0-7][0-9]{1,2})|(28800)",
      "maxChars":64
    },
    "executionTimeout":{
      "type":"String",
      "default":"300",
      "description":"(Optional) The time in seconds for a command to be completed before it is considered to have failed. Default is 3600 (1 hour). Maximum is 45000 (12.5 hours).",
      "allowedPattern":"([1-9][0-9]{0,3})|(1[0-9]{1,4})|(2[0-7][0-9]{1,3})|(28[0-7][0-9]{1,2})|(45000)"
    }
  },
  "mainSteps": [{
    "action": "aws:runPowerShellScript",
    "name" : "runPowerShellScript",
    "inputs":{
      "runCommand":[
        "$ErrorActionPreference = 'Continue'",
        "$ipV4 = Test-Connection -ComputerName (hostname) -Count 1  | Select -ExpandProperty IPV4Address",
        "$ip = $ipV4.IPAddressToString",
        "Add-Type -AssemblyName System.Web",
        "$password= [System.Web.Security.Membership]::GeneratePassword(15,4)",
        "Function addUser($userID, $password){  $compName = $env:COMPUTERNAME;  $cn = [ADSI]\"WinNT://$compName\";  $user = $cn.Create('User', $userID);     $user.SetPassword($password);    try{ $user.SetInfo(); }catch{ if( $_.Exception.Message -like '*The account already exists*'){ $reason=\"User already exists on this instance. Please submit a new request.\" } else{ $reason=\"Error was encountered when attempting to add user and will be investigated. If necessary, please submit a new request.\"  }  Send-Mailmessage -To '{{ userEmail }}'  -From '{{ mailFrom }}' -Cc @('{{ opsEmail }}' , '{{ teamEmail }}') -Subject 'Could not add user' -Body \"<html><h1> FINRA Gatekeeper</h1><h3  style=\"\"color:darkred;\"\"> Temporary account could not be created </h3><div><p>Hello <b>{{ userName }}</b>. A temporary account could not be created on the following <b>Windows</b> instance in {{ account }} </p></div><ul><li><b>$ip</b></li></ul><div><p>$reason</p></div><div><p>Thanks!</p></div><div><p>The PET Team</p></div></html>\" -BodyAsHtml -SmtpServer '{{ smtpServer }}'; exit 1; }   }",
        "Function addMembership($userID, $group){   $group = [ADSI]\"WinNT://$env:COMPUTERNAME/$group,group\";     $group.Add(\"WinNT://$env:COMPUTERNAME/$userID,user\");     }",
        "Function setupUser($userID, $password){    addUser $userID $password;   addMembership $userID 'Administrators';  addMembership $userID 'Remote Desktop Users';     }",
        "setupUser {{ userId }} $password",
        "Function sendMail($subject, $key, $value, $pair){ Send-Mailmessage -To '{{ userEmail }}'  -From '{{ mailFrom }}' -BodyAsHtml -SmtpServer '{{ smtpServer }}' -Subject $subject -Body \"<html><h1> FINRA Gatekeeper</h1><h3  style=\"\"color:darkgreen;\"\"> Here is your temporary $key </h3><div><p>Hello <b>{{ userName }}</b>. You have been granted temporary access: <br/><br/>${key}: <b>$value</b><br/><br/> to the following <b>Windows</b> instance in {{ account }} </p></div><ul><li><b>$ip</b></li></ul><div><p>The accompanying $pair will be sent in a separate email. This temporary $key will expire in {{ hours }} hour(s) time from retrieval of this message</p></div><div><p>Thanks!</p></div><div><p>The PET Team</p></div></html>\" }",
        "sendMail 'Access Request {{ accessRequest }} - Your temporary username' 'username' {{ userId }} 'password'",
        "sendMail 'Access Request {{ accessRequest }} - Your temporary password' 'credential' $password 'username'"
      ],
      "workingDirectory":"C:\\Windows",
      "timeoutSeconds":"{{ executionTimeout }}"
    }
  }]
}