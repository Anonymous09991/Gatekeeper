{
    "docs": [
        {
            "location": "/",
            "text": "What is Gatekeeper?\n\u00b6\n\n\nGatekeeper is an application that we developed here at FINRA to manage temporary access to EC2 and RDS resources in AWS in an automated fashion\n\n\nHow does Gatekeeper work?\n\u00b6\n\n\nEC2\n\u00b6\n\n\nFor EC2 Gatekeeper leverages AWS SSM (Amazon Simple System Manager) to create (and remove) temporary users on EC2 Instances \n\n\nRDS\n\u00b6\n\n\nFor RDS Gatekeeper leverages the AWS RDS API to be able to connect to supported RDS instances and generate users with generic sql queries specific to the engine of the RDS Instance. Currently gatekeeper supports mysql and postgres\n\n\nAWS Re:Invent 2017\n\u00b6\n\n\nSee our blog post \nhere\n for more information\n\n\nWe also had a demo of the application in action at AWS Re:invent 2017, to see that you can find the following links below:\n\n\nFull Talk\n\u00b6\n\n\n \n\n\nDemo\n\u00b6\n\n\n \n\n\nWhy Gatekeeper?\n\u00b6\n\n\nIn a transient environment where application instances are constantly being torn down / spun up managing user access gets complicated. Gatekeeper resolves this by automating the creation of that user, and making sure that the user is only valid for a temporary time period. \n\n\nSince access is automated and on a temporary basis, using Gatekeeper can reduce the amount of permanent users that get set up on an instance, allowing your resources to be more secure.\n\n\nGatekeeper also stores and logs all of the access requests making user access fully auditable.",
            "title": "Getting Started"
        },
        {
            "location": "/#what-is-gatekeeper",
            "text": "Gatekeeper is an application that we developed here at FINRA to manage temporary access to EC2 and RDS resources in AWS in an automated fashion",
            "title": "What is Gatekeeper?"
        },
        {
            "location": "/#how-does-gatekeeper-work",
            "text": "",
            "title": "How does Gatekeeper work?"
        },
        {
            "location": "/#ec2",
            "text": "For EC2 Gatekeeper leverages AWS SSM (Amazon Simple System Manager) to create (and remove) temporary users on EC2 Instances",
            "title": "EC2"
        },
        {
            "location": "/#rds",
            "text": "For RDS Gatekeeper leverages the AWS RDS API to be able to connect to supported RDS instances and generate users with generic sql queries specific to the engine of the RDS Instance. Currently gatekeeper supports mysql and postgres",
            "title": "RDS"
        },
        {
            "location": "/#aws-reinvent-2017",
            "text": "See our blog post  here  for more information  We also had a demo of the application in action at AWS Re:invent 2017, to see that you can find the following links below:",
            "title": "AWS Re:Invent 2017"
        },
        {
            "location": "/#full-talk",
            "text": "",
            "title": "Full Talk"
        },
        {
            "location": "/#demo",
            "text": "",
            "title": "Demo"
        },
        {
            "location": "/#why-gatekeeper",
            "text": "In a transient environment where application instances are constantly being torn down / spun up managing user access gets complicated. Gatekeeper resolves this by automating the creation of that user, and making sure that the user is only valid for a temporary time period.   Since access is automated and on a temporary basis, using Gatekeeper can reduce the amount of permanent users that get set up on an instance, allowing your resources to be more secure.  Gatekeeper also stores and logs all of the access requests making user access fully auditable.",
            "title": "Why Gatekeeper?"
        },
        {
            "location": "/local-setup/",
            "text": "Local Setup\n\u00b6\n\n\nWe are initally providing a local run of the gatekeeper application, in the coming months we will provide more details on getting the Gatekeeper Application deployed into AWS.\n\n\nPrerequisites\n\u00b6\n\n\nGatekeeper requires the following tools to be installed and on your $PATH variable:\n\n\n\n\nJava 8+\n\n\nMaven 3+\n\n\nNPM 3+\n\n\nDocker\n\n\n\n\nMac + Linux environments (1-Command Setup)\n\u00b6\n\n\nCurrently we provide a shell script that builds all of the app code / containers that comprise Gatekeeper. Currently we only support this for Linux and Mac environments. All you have to do is provide the following environment variables\n\n\n\n\nAWS_DIRECTORY\n: the location on your computer with your AWS Credentials usually it's \n/.aws\n\n\nhttp_proxy\n: if behind a corporate proxy set the proxy to this variable. (defaults to blank if not provided)\n\n\n\n\nOnce you have these set, simply run \nstart.sh\n and the script will build all the gatekeeper code/containers + bring up gatekeeper locally.\n\n\nHit gatekeeper at the following locations to see the different User/Roles in action:\n\n\nhttps://localhost:443\n => Regular User\n\n\nhttps://localhost:444\n => Ops/Support User\n\n\nhttps://localhost:445\n => Approver\n\n\nWindows 10 users\n\u00b6\n\n\nIf you're a windows 10 user we don't have a script for you unfortunately, but that doesn't mean you can't run gatekeeper locally. \n\n\nMake sure you have the following environment variables set:\n\n\n\n\nAWS_DIRECTORY\n: the location on your computer with your AWS Credentials usually it's \n/.aws\n\n\nhttp_proxy\n: if behind a corporate proxy set the proxy to this variable. you need to set it to blank if not provided\n\n\n\n\nRun the following commands:\n\n\n#cd to containers folder and build the base containers\n\ndocker-compose build\n\n#cd to demo-services and build the fake-account-service\n\nmvn clean install\n\n#cd to services directory and build the gatekeeper backend services\n\nmvn clean install\n\n#cd to the ui directory and build the gatekeeper UI code\n\nnpm run win-build\n\n#cd to the main directory and build the gatekeeper containers\n\ndocker-compose -f local-docker-compose.yml build\n\n#bring the gatekeeper up with the following command\n\ndocker-compose -f local-docker-compose.yml up\n\n\nHit gatekeeper at the following locations to see the different User/Roles in action:\n\n\nhttps://localhost:443\n => Regular User\n\n\nhttps://localhost:444\n => Ops/Support User\n\n\nhttps://localhost:445\n => Approver",
            "title": "Local Setup"
        },
        {
            "location": "/local-setup/#local-setup",
            "text": "We are initally providing a local run of the gatekeeper application, in the coming months we will provide more details on getting the Gatekeeper Application deployed into AWS.",
            "title": "Local Setup"
        },
        {
            "location": "/local-setup/#prerequisites",
            "text": "Gatekeeper requires the following tools to be installed and on your $PATH variable:   Java 8+  Maven 3+  NPM 3+  Docker",
            "title": "Prerequisites"
        },
        {
            "location": "/local-setup/#mac-linux-environments-1-command-setup",
            "text": "Currently we provide a shell script that builds all of the app code / containers that comprise Gatekeeper. Currently we only support this for Linux and Mac environments. All you have to do is provide the following environment variables   AWS_DIRECTORY : the location on your computer with your AWS Credentials usually it's  /.aws  http_proxy : if behind a corporate proxy set the proxy to this variable. (defaults to blank if not provided)   Once you have these set, simply run  start.sh  and the script will build all the gatekeeper code/containers + bring up gatekeeper locally.  Hit gatekeeper at the following locations to see the different User/Roles in action:  https://localhost:443  => Regular User  https://localhost:444  => Ops/Support User  https://localhost:445  => Approver",
            "title": "Mac + Linux environments (1-Command Setup)"
        },
        {
            "location": "/local-setup/#windows-10-users",
            "text": "If you're a windows 10 user we don't have a script for you unfortunately, but that doesn't mean you can't run gatekeeper locally.   Make sure you have the following environment variables set:   AWS_DIRECTORY : the location on your computer with your AWS Credentials usually it's  /.aws  http_proxy : if behind a corporate proxy set the proxy to this variable. you need to set it to blank if not provided   Run the following commands:  #cd to containers folder and build the base containers \ndocker-compose build #cd to demo-services and build the fake-account-service \nmvn clean install #cd to services directory and build the gatekeeper backend services \nmvn clean install #cd to the ui directory and build the gatekeeper UI code \nnpm run win-build #cd to the main directory and build the gatekeeper containers \ndocker-compose -f local-docker-compose.yml build #bring the gatekeeper up with the following command \ndocker-compose -f local-docker-compose.yml up \nHit gatekeeper at the following locations to see the different User/Roles in action:  https://localhost:443  => Regular User  https://localhost:444  => Ops/Support User  https://localhost:445  => Approver",
            "title": "Windows 10 users"
        },
        {
            "location": "/aws-setup/",
            "text": "Setting your AWS environment\n\u00b6\n\n\nWe currently only have a local instance of gatekeeper running, if you wanted to use it with your AWS Environment some setup needs to be done.\n\n\n\n\nEnsure that your EC2 instances all install (and run) the AWS SSM agent\n\n\nwithout the SSM agent running gatekeeper cannot create/delete temp users\n\n\n\n\n\n\nStage SSM docs to create/delete users for Linux/Windows (more details below)\n\n\nSet up IAM roles for gatekeeper\n\n\nan IAM role that the gatekeeper app runs with\n\n\nthis account needs to be able to assume to the cross-account gatekeeper role\n\n\n\n\n\n\na \"cross-account\" IAM role that gatekeeper assumes to perform AWS tasks\n\n\nthis needs to allow the gatekeeper role to assume this IAM role\n\n\nthis needs to be set up on every account Gatekeeper will support \n\n\nbelow is the priveliges the cross account IAM role for gatekeeper should have:\n\n{\n\n            \n\"Version\"\n:\n \n\"2012-10-17\"\n,\n\n            \n\"Statement\"\n:\n \n[\n\n                \n{\n\n                    \n\"Sid\"\n:\n \n\"Update\"\n,\n\n                    \n\"Effect\"\n:\n \n\"Allow\"\n,\n\n                    \n\"Action\"\n:\n \n[\n\n                        \n\"ec2:Describe*\"\n,\n\n                        \n\"rds:Describe*\"\n,\n\n                        \n\"rds:ListTagsForResource\"\n,\n\n                        \n\"ssm:Describe*\"\n,\n\n                        \n\"ssm:Get*\"\n,\n\n                        \n\"ssm:List*\"\n,\n\n                        \n\"ssm:CancelCommand\"\n\n                    \n],\n\n                    \n\"Resource\"\n:\n \n[\n\n                        \n\"*\"\n\n                    \n]\n\n                \n},\n\n                \n{\n\n                    \n\"Effect\"\n:\n \n\"Allow\"\n,\n\n                    \n\"Action\"\n:\n \n[\n\n                        \n\"ssm:SendCommand\"\n\n                    \n],\n\n                    \n\"Resource\"\n:\n \n[\n\n                        \n\"arn:aws:ssm:*:*:document/GK*\"\n,\n\n                        \n\"arn:aws:ec2:*:*:*\"\n\n                    \n]\n\n                \n}\n\n            \n]\n\n        \n}\n\n\n\n\n\n\n\n\n\n\n\n\nfor RDS databases a gatekeeper account needs to be set up on every RDS instance you intend to use Gatekeeper with\n\n\nfor postgres please see \naws/rds/postgres_setup.sql\n\n\nfor mysql please see \naws/rds/mysql_setup.sql\n      \n\n\n\n\n\n\n\n\nConfiguring\n\u00b6\n\n\nGatekeeper requires some configuration for it to run in your environment, see below for all of the supported configuration parameters\n\n\nGlobal\n\u00b6\n\n\nThese parameters are used by both the EC2 and RDS Gatekeeeper services \n\n\nAuthorization\n\u00b6\n\n\nCurrently Gatekeeper only supports authorization through LDAP, the application expects authentication to be done via SSO, and looks for the username in a header.\n\n\n\n\n\n\n\n\nProperty\n\n\nDescription\n\n\nType\n\n\n\n\n\n\n\n\n\n\ngatekeeper.auth.userIdHeader\n\n\nThe header in which gatekeeper looks to extract the authenticated user\n\n\nstring\n\n\n\n\n\n\ngatekeeper.auth.ldap.isActiveDirectory\n\n\nWhether your LDAP server is Microsoft Active Directory or not (Nested groups are not supported with Non-Active Directory LDAP servers)\n\n\nboolean\n\n\n\n\n\n\ngatekeeper.auth.ldap.objectClass\n\n\nThe Object class to look for users with (ex. posixAccount, person, user)\n\n\nstring\n\n\n\n\n\n\ngatekeeper.auth.ldap.usersBase\n\n\nThe base in which the Users are stored on the LDAP Server (e.g. ou=Users,dc=example,dc=org)\n\n\nstring\n\n\n\n\n\n\ngatekeeper.auth.ldap.userDn\n\n\nThe DN for the user that gatekeeper connects as to query ldap (e.g. cn=admin,dc=example,dc=org )\n\n\nstring\n\n\n\n\n\n\ngatekeeper.auth.ldap.userPassword\n\n\nThe password to the ldap user\n\n\nstring\n\n\n\n\n\n\ngatekeeper.auth.ldap.server\n\n\nThe domain of the LDAP server that gatekeeper should connect to\n\n\nstring\n\n\n\n\n\n\ngatekeeper.auth.ldap.base\n\n\nThe base that LDAP calls will be made off of (e.g. dc=example,dc=org)\n\n\nstring\n\n\n\n\n\n\ngatekeeper.auth.ldap.usersCnAttribute\n\n\nThe cn\n\n\nstring\n\n\n\n\n\n\ngatekeeper.auth.ldap.usersIdAttribute\n\n\nThe uid\n\n\nstring\n\n\n\n\n\n\ngatekeeper.auth.ldap.usersNameAttribute\n\n\nThe name\n\n\nstring\n\n\n\n\n\n\ngatekeeper.auth.ldap.usersEmailAttribute\n\n\nThe email\n\n\nstring\n\n\n\n\n\n\ngatekeeper.auth.ldap.usersDnAttribute\n\n\nThe dn\n\n\nstring\n\n\n\n\n\n\ngatekeeper.auth.ldap.pattern\n\n\nA regular expression that is used to extract group names from the LDAP results. The regular expression must have exactly one capture ( e.g developer_([A-Za-z0-9]+)_dev) pattern\n\n\nstring\n\n\n\n\n\n\ngatekeeper.auth.ldap.groupsBase\n\n\nThe base where your groups are stored on your organization's LDAP server (e.g. ou=groups)\n\n\nstring\n\n\n\n\n\n\n\n\nAWS\n\u00b6\n\n\n\n\n\n\n\n\nProperty\n\n\nDescription\n\n\nType\n\n\n\n\n\n\n\n\n\n\ngatekeeper.accountInfoEndpoint\n\n\nThe Endpoint gatekeeper calls to fetch the account data for all of your aws accounts\n\n\nstring\n\n\n\n\n\n\ngatekeeper.accountInfoUri\n\n\nThe URI where gatekeeper can call your account Info service. (Defaults to \"accounts\")\n\n\nstring\n\n\n\n\n\n\ngatekeeper.aws.proxyHost\n\n\n(Optional) The Proxy Host. If you are not behind a proxy you can ignore this\n\n\nstring\n\n\n\n\n\n\ngatekeeper.aws.proxyPort\n\n\n(Optional) The Proxy Port. If you are not behind a proxy you can ignore this\n\n\ninteger\n\n\n\n\n\n\ngatekeeper.aws.roleToAssume\n\n\nThe AWS IAM role that Gatekeeper will assume to interact with AWS (e.g. Xacnt_APP_GATEKEEPER)\n\n\nstring\n\n\n\n\n\n\n\n\nEMAIL\n\u00b6\n\n\nGatekeeper primarily communicates out temporary credentials via email, these are the properties gatekeeper requires for email\n\n\n\n\n\n\n\n\nProperty\n\n\nDescription\n\n\nType\n\n\n\n\n\n\n\n\n\n\ngatekeeper.email.host\n\n\nThe host of your mail server\n\n\nstring\n\n\n\n\n\n\ngatekeeper.email.port\n\n\nThe port that it runs on\n\n\ninteger\n\n\n\n\n\n\ngatekeeper.email.from\n\n\nThe name of the Sender for Gatekeeper emails.\n\n\nstring\n\n\n\n\n\n\ngatekeeper.email.team\n\n\nThe team that will be maintaining gatekeeper on your environment.\n\n\nstring\n\n\n\n\n\n\ngatekeeper.email.approverEmails\n\n\nThe email address for the group who will be handling approvals\n\n\nstring\n\n\n\n\n\n\ngatekeeper.email.opsEmails\n\n\nThe email address for gatekeeper to reach out to the Ops team\n\n\nstring\n\n\n\n\n\n\n\n\nDATABASE\n\u00b6\n\n\n\n\n\n\n\n\nProperty\n\n\nDescription\n\n\nType\n\n\n\n\n\n\n\n\n\n\ngatekeeper.db.url\n\n\nThe Postgres Database URL to connect to\n\n\nString\n\n\n\n\n\n\ngatekeeper.db.port\n\n\nThe Port of the database\n\n\ninteger\n\n\n\n\n\n\ngatekeeper.db.database\n\n\nThe name of the database\n\n\nstring\n\n\n\n\n\n\ngatekeeper.db.ssl\n\n\nWhether to enable SSL or not\n\n\nboolean\n\n\n\n\n\n\ngatekeeper.db.sslMode\n\n\nThe SSL mode to use\n\n\nstring\n\n\n\n\n\n\ngatekeeper.db.sslCert\n\n\nThe SSL certificate location to use ( we provide the RDS cert in the container )\n\n\nstring\n\n\n\n\n\n\ngatekeeper.db.user\n\n\nThe DB user to log in as\n\n\nstring\n\n\n\n\n\n\ngatekeeper.db.password\n\n\nThe DB user password\n\n\nstring\n\n\n\n\n\n\n\n\nEC2\n\u00b6\n\n\nThese configurations are specific to Gatekeeper EC2\n\n\nDATABASE\n\u00b6\n\n\n\n\n\n\n\n\nProperty\n\n\nDescription\n\n\nType\n\n\n\n\n\n\n\n\n\n\ngatekeeper.db.schema\n\n\nThe schema in which gatekeeper operates its tables\n\n\ngatekeeper_ec2\n\n\n\n\n\n\n\n\nAUTHORIZATION\n\u00b6\n\n\n\n\n\n\n\n\nProperty\n\n\nDescription\n\n\nType\n\n\n\n\n\n\n\n\n\n\ngatekeeper.auth.approverGroup\n\n\nThe LDAP group containing the gatekeeper approvers\n\n\nstring\n\n\n\n\n\n\ngatekeeper.auth.supportGroup\n\n\nThe LDAP group containing the gatekeeper support staff\n\n\nstring\n\n\n\n\n\n\n\n\nAPPROVALS\n\u00b6\n\n\nYou will set these once for each environment you have in your company\n\n\nHere's an example (taken from \nconfig/ec2_service_config.env\n)\n\n\ngatekeeper.approvalThreshold.dev.dev=45\ngatekeeper.approvalThreshold.dev.qa=44\ngatekeeper.approvalThreshold.dev.prod=-1\ngatekeeper.approvalThreshold.dev.test=4\n\ngatekeeper.approvalThreshold.support.dev=42\ngatekeeper.approvalThreshold.support.qa=41\ngatekeeper.approvalThreshold.support.prod=2\ngatekeeper.approvalThreshold.support.test=5\n\n\n\n\nThis tells Gatekeeper the following:\n1. For a developer role the maximum hours the user can request is:\n    - <= 45 for dev environment\n    - <= 44 for qa environment\n    - approval is \nalways\n required for prod\n    - <= 4 for test\n2. For a support role the maximum hours the user can request without requiring approval is:\n   - <= 42 hours for dev environment\n   - <= 41 for qa environment\n   - <= 2 for prod environment\n   - <= 5 for test environment\n\n\n\n\n\n\n\n\nProperty\n\n\nDescription\n\n\nType\n\n\n\n\n\n\n\n\n\n\ngatekeeper.approvalThreshold.dev.\n\n\nThe approval threshold for a given environment for the dev role\n\n\ninteger\n\n\n\n\n\n\ngatekeeper.approvalThreshold.support.\n\n\nThe approval threshold for a given environment for the support role\n\n\ninteger",
            "title": "AWS Setup"
        },
        {
            "location": "/aws-setup/#setting-your-aws-environment",
            "text": "We currently only have a local instance of gatekeeper running, if you wanted to use it with your AWS Environment some setup needs to be done.   Ensure that your EC2 instances all install (and run) the AWS SSM agent  without the SSM agent running gatekeeper cannot create/delete temp users    Stage SSM docs to create/delete users for Linux/Windows (more details below)  Set up IAM roles for gatekeeper  an IAM role that the gatekeeper app runs with  this account needs to be able to assume to the cross-account gatekeeper role    a \"cross-account\" IAM role that gatekeeper assumes to perform AWS tasks  this needs to allow the gatekeeper role to assume this IAM role  this needs to be set up on every account Gatekeeper will support   below is the priveliges the cross account IAM role for gatekeeper should have: { \n             \"Version\" :   \"2012-10-17\" , \n             \"Statement\" :   [ \n                 { \n                     \"Sid\" :   \"Update\" , \n                     \"Effect\" :   \"Allow\" , \n                     \"Action\" :   [ \n                         \"ec2:Describe*\" , \n                         \"rds:Describe*\" , \n                         \"rds:ListTagsForResource\" , \n                         \"ssm:Describe*\" , \n                         \"ssm:Get*\" , \n                         \"ssm:List*\" , \n                         \"ssm:CancelCommand\" \n                     ], \n                     \"Resource\" :   [ \n                         \"*\" \n                     ] \n                 }, \n                 { \n                     \"Effect\" :   \"Allow\" , \n                     \"Action\" :   [ \n                         \"ssm:SendCommand\" \n                     ], \n                     \"Resource\" :   [ \n                         \"arn:aws:ssm:*:*:document/GK*\" , \n                         \"arn:aws:ec2:*:*:*\" \n                     ] \n                 } \n             ] \n         }       for RDS databases a gatekeeper account needs to be set up on every RDS instance you intend to use Gatekeeper with  for postgres please see  aws/rds/postgres_setup.sql  for mysql please see  aws/rds/mysql_setup.sql",
            "title": "Setting your AWS environment"
        },
        {
            "location": "/aws-setup/#configuring",
            "text": "Gatekeeper requires some configuration for it to run in your environment, see below for all of the supported configuration parameters",
            "title": "Configuring"
        },
        {
            "location": "/aws-setup/#global",
            "text": "These parameters are used by both the EC2 and RDS Gatekeeeper services",
            "title": "Global"
        },
        {
            "location": "/aws-setup/#authorization",
            "text": "Currently Gatekeeper only supports authorization through LDAP, the application expects authentication to be done via SSO, and looks for the username in a header.     Property  Description  Type      gatekeeper.auth.userIdHeader  The header in which gatekeeper looks to extract the authenticated user  string    gatekeeper.auth.ldap.isActiveDirectory  Whether your LDAP server is Microsoft Active Directory or not (Nested groups are not supported with Non-Active Directory LDAP servers)  boolean    gatekeeper.auth.ldap.objectClass  The Object class to look for users with (ex. posixAccount, person, user)  string    gatekeeper.auth.ldap.usersBase  The base in which the Users are stored on the LDAP Server (e.g. ou=Users,dc=example,dc=org)  string    gatekeeper.auth.ldap.userDn  The DN for the user that gatekeeper connects as to query ldap (e.g. cn=admin,dc=example,dc=org )  string    gatekeeper.auth.ldap.userPassword  The password to the ldap user  string    gatekeeper.auth.ldap.server  The domain of the LDAP server that gatekeeper should connect to  string    gatekeeper.auth.ldap.base  The base that LDAP calls will be made off of (e.g. dc=example,dc=org)  string    gatekeeper.auth.ldap.usersCnAttribute  The cn  string    gatekeeper.auth.ldap.usersIdAttribute  The uid  string    gatekeeper.auth.ldap.usersNameAttribute  The name  string    gatekeeper.auth.ldap.usersEmailAttribute  The email  string    gatekeeper.auth.ldap.usersDnAttribute  The dn  string    gatekeeper.auth.ldap.pattern  A regular expression that is used to extract group names from the LDAP results. The regular expression must have exactly one capture ( e.g developer_([A-Za-z0-9]+)_dev) pattern  string    gatekeeper.auth.ldap.groupsBase  The base where your groups are stored on your organization's LDAP server (e.g. ou=groups)  string",
            "title": "Authorization"
        },
        {
            "location": "/aws-setup/#aws",
            "text": "Property  Description  Type      gatekeeper.accountInfoEndpoint  The Endpoint gatekeeper calls to fetch the account data for all of your aws accounts  string    gatekeeper.accountInfoUri  The URI where gatekeeper can call your account Info service. (Defaults to \"accounts\")  string    gatekeeper.aws.proxyHost  (Optional) The Proxy Host. If you are not behind a proxy you can ignore this  string    gatekeeper.aws.proxyPort  (Optional) The Proxy Port. If you are not behind a proxy you can ignore this  integer    gatekeeper.aws.roleToAssume  The AWS IAM role that Gatekeeper will assume to interact with AWS (e.g. Xacnt_APP_GATEKEEPER)  string",
            "title": "AWS"
        },
        {
            "location": "/aws-setup/#email",
            "text": "Gatekeeper primarily communicates out temporary credentials via email, these are the properties gatekeeper requires for email     Property  Description  Type      gatekeeper.email.host  The host of your mail server  string    gatekeeper.email.port  The port that it runs on  integer    gatekeeper.email.from  The name of the Sender for Gatekeeper emails.  string    gatekeeper.email.team  The team that will be maintaining gatekeeper on your environment.  string    gatekeeper.email.approverEmails  The email address for the group who will be handling approvals  string    gatekeeper.email.opsEmails  The email address for gatekeeper to reach out to the Ops team  string",
            "title": "EMAIL"
        },
        {
            "location": "/aws-setup/#database",
            "text": "Property  Description  Type      gatekeeper.db.url  The Postgres Database URL to connect to  String    gatekeeper.db.port  The Port of the database  integer    gatekeeper.db.database  The name of the database  string    gatekeeper.db.ssl  Whether to enable SSL or not  boolean    gatekeeper.db.sslMode  The SSL mode to use  string    gatekeeper.db.sslCert  The SSL certificate location to use ( we provide the RDS cert in the container )  string    gatekeeper.db.user  The DB user to log in as  string    gatekeeper.db.password  The DB user password  string",
            "title": "DATABASE"
        },
        {
            "location": "/aws-setup/#ec2",
            "text": "These configurations are specific to Gatekeeper EC2",
            "title": "EC2"
        },
        {
            "location": "/aws-setup/#database_1",
            "text": "Property  Description  Type      gatekeeper.db.schema  The schema in which gatekeeper operates its tables  gatekeeper_ec2",
            "title": "DATABASE"
        },
        {
            "location": "/aws-setup/#authorization_1",
            "text": "Property  Description  Type      gatekeeper.auth.approverGroup  The LDAP group containing the gatekeeper approvers  string    gatekeeper.auth.supportGroup  The LDAP group containing the gatekeeper support staff  string",
            "title": "AUTHORIZATION"
        },
        {
            "location": "/aws-setup/#approvals",
            "text": "You will set these once for each environment you have in your company  Here's an example (taken from  config/ec2_service_config.env )  gatekeeper.approvalThreshold.dev.dev=45\ngatekeeper.approvalThreshold.dev.qa=44\ngatekeeper.approvalThreshold.dev.prod=-1\ngatekeeper.approvalThreshold.dev.test=4\n\ngatekeeper.approvalThreshold.support.dev=42\ngatekeeper.approvalThreshold.support.qa=41\ngatekeeper.approvalThreshold.support.prod=2\ngatekeeper.approvalThreshold.support.test=5  This tells Gatekeeper the following:\n1. For a developer role the maximum hours the user can request is:\n    - <= 45 for dev environment\n    - <= 44 for qa environment\n    - approval is  always  required for prod\n    - <= 4 for test\n2. For a support role the maximum hours the user can request without requiring approval is:\n   - <= 42 hours for dev environment\n   - <= 41 for qa environment\n   - <= 2 for prod environment\n   - <= 5 for test environment     Property  Description  Type      gatekeeper.approvalThreshold.dev.  The approval threshold for a given environment for the dev role  integer    gatekeeper.approvalThreshold.support.  The approval threshold for a given environment for the support role  integer",
            "title": "APPROVALS"
        },
        {
            "location": "/configuration/",
            "text": "Configuration\n\u00b6\n\n\nGatekeeper requires some configuration for it to run in your environment, see below for all of the supported configuration parameters\n\n\nGlobal\n\u00b6\n\n\nThese parameters are used by both the EC2 and RDS Gatekeeeper services \n\n\nAuthorization\n\u00b6\n\n\nCurrently Gatekeeper only supports authorization through LDAP, the application expects authentication to be done via SSO, and looks for the username in a header.\n\n\n\n\n\n\n\n\nProperty\n\n\nDescription\n\n\nType\n\n\n\n\n\n\n\n\n\n\ngatekeeper.auth.userIdHeader\n\n\nThe header in which gatekeeper looks to extract the authenticated user\n\n\nstring\n\n\n\n\n\n\ngatekeeper.auth.ldap.isActiveDirectory\n\n\nWhether your LDAP server is Microsoft Active Directory or not (Nested groups are not supported with Non-Active Directory LDAP servers)\n\n\nboolean\n\n\n\n\n\n\ngatekeeper.auth.ldap.objectClass\n\n\nThe Object class to look for users with (ex. posixAccount, person, user)\n\n\nstring\n\n\n\n\n\n\ngatekeeper.auth.ldap.usersBase\n\n\nThe base in which the Users are stored on the LDAP Server (e.g. ou=Users,dc=example,dc=org)\n\n\nstring\n\n\n\n\n\n\ngatekeeper.auth.ldap.userDn\n\n\nThe DN for the user that gatekeeper connects as to query ldap (e.g. cn=admin,dc=example,dc=org )\n\n\nstring\n\n\n\n\n\n\ngatekeeper.auth.ldap.userPassword\n\n\nThe password to the ldap user\n\n\nstring\n\n\n\n\n\n\ngatekeeper.auth.ldap.server\n\n\nThe domain of the LDAP server that gatekeeper should connect to\n\n\nstring\n\n\n\n\n\n\ngatekeeper.auth.ldap.base\n\n\nThe base that LDAP calls will be made off of (e.g. dc=example,dc=org)\n\n\nstring\n\n\n\n\n\n\ngatekeeper.auth.ldap.usersCnAttribute\n\n\nThe cn\n\n\nstring\n\n\n\n\n\n\ngatekeeper.auth.ldap.usersIdAttribute\n\n\nThe uid\n\n\nstring\n\n\n\n\n\n\ngatekeeper.auth.ldap.usersNameAttribute\n\n\nThe name\n\n\nstring\n\n\n\n\n\n\ngatekeeper.auth.ldap.usersEmailAttribute\n\n\nThe email\n\n\nstring\n\n\n\n\n\n\ngatekeeper.auth.ldap.usersDnAttribute\n\n\nThe dn\n\n\nstring\n\n\n\n\n\n\ngatekeeper.auth.ldap.pattern\n\n\nA regular expression that is used to extract group names from the LDAP results. The regular expression must have exactly one capture ( e.g developer_([A-Za-z0-9]+)_dev) pattern\n\n\nstring\n\n\n\n\n\n\ngatekeeper.auth.ldap.groupsBase\n\n\nThe base where your groups are stored on your organization's LDAP server (e.g. ou=groups)\n\n\nstring\n\n\n\n\n\n\n\n\nAWS\n\u00b6\n\n\n\n\n\n\n\n\nProperty\n\n\nDescription\n\n\nType\n\n\n\n\n\n\n\n\n\n\ngatekeeper.accountInfoEndpoint\n\n\nThe Endpoint gatekeeper calls to fetch the account data for all of your aws accounts\n\n\nstring\n\n\n\n\n\n\ngatekeeper.accountInfoUri\n\n\nThe URI where gatekeeper can call your account Info service. (Defaults to \"accounts\")\n\n\nstring\n\n\n\n\n\n\ngatekeeper.aws.proxyHost\n\n\n(Optional) The Proxy Host. If you are not behind a proxy you can ignore this\n\n\nstring\n\n\n\n\n\n\ngatekeeper.aws.proxyPort\n\n\n(Optional) The Proxy Port. If you are not behind a proxy you can ignore this\n\n\ninteger\n\n\n\n\n\n\ngatekeeper.aws.roleToAssume\n\n\nThe AWS IAM role that Gatekeeper will assume to interact with AWS (e.g. Xacnt_APP_GATEKEEPER)\n\n\nstring\n\n\n\n\n\n\n\n\nEMAIL\n\u00b6\n\n\nGatekeeper primarily communicates out temporary credentials via email, these are the properties gatekeeper requires for email\n\n\n\n\n\n\n\n\nProperty\n\n\nDescription\n\n\nType\n\n\n\n\n\n\n\n\n\n\ngatekeeper.email.host\n\n\nThe host of your mail server\n\n\nstring\n\n\n\n\n\n\ngatekeeper.email.port\n\n\nThe port that it runs on\n\n\ninteger\n\n\n\n\n\n\ngatekeeper.email.from\n\n\nThe name of the Sender for Gatekeeper emails.\n\n\nstring\n\n\n\n\n\n\ngatekeeper.email.team\n\n\nThe team that will be maintaining gatekeeper on your environment.\n\n\nstring\n\n\n\n\n\n\ngatekeeper.email.approverEmails\n\n\nThe email address for the group who will be handling approvals\n\n\nstring\n\n\n\n\n\n\ngatekeeper.email.opsEmails\n\n\nThe email address for gatekeeper to reach out to the Ops team\n\n\nstring\n\n\n\n\n\n\n\n\nDATABASE\n\u00b6\n\n\n\n\n\n\n\n\nProperty\n\n\nDescription\n\n\nType\n\n\n\n\n\n\n\n\n\n\ngatekeeper.db.url\n\n\nThe Postgres Database URL to connect to\n\n\nString\n\n\n\n\n\n\ngatekeeper.db.port\n\n\nThe Port of the database\n\n\ninteger\n\n\n\n\n\n\ngatekeeper.db.database\n\n\nThe name of the database\n\n\nstring\n\n\n\n\n\n\ngatekeeper.db.ssl\n\n\nWhether to enable SSL or not\n\n\nboolean\n\n\n\n\n\n\ngatekeeper.db.sslMode\n\n\nThe SSL mode to use\n\n\nstring\n\n\n\n\n\n\ngatekeeper.db.sslCert\n\n\nThe SSL certificate location to use ( we provide the RDS cert in the container )\n\n\nstring\n\n\n\n\n\n\ngatekeeper.db.user\n\n\nThe DB user to log in as\n\n\nstring\n\n\n\n\n\n\ngatekeeper.db.password\n\n\nThe DB user password\n\n\nstring\n\n\n\n\n\n\n\n\nEC2\n\u00b6\n\n\nThese configurations are specific to Gatekeeper EC2\n\n\nDATABASE\n\u00b6\n\n\n\n\n\n\n\n\nProperty\n\n\nDescription\n\n\nType\n\n\n\n\n\n\n\n\n\n\ngatekeeper.db.schema\n\n\nThe schema in which gatekeeper operates its tables\n\n\ngatekeeper_ec2\n\n\n\n\n\n\n\n\nAUTHORIZATION\n\u00b6\n\n\n\n\n\n\n\n\nProperty\n\n\nDescription\n\n\nType\n\n\n\n\n\n\n\n\n\n\ngatekeeper.auth.approverGroup\n\n\nThe LDAP group containing the gatekeeper approvers\n\n\nstring\n\n\n\n\n\n\ngatekeeper.auth.supportGroup\n\n\nThe LDAP group containing the gatekeeper support staff\n\n\nstring\n\n\n\n\n\n\n\n\nAPPROVALS\n\u00b6\n\n\nYou will set these once for each environment you have in your company\n\n\nHere's an example (taken from \nconfig/ec2_service_config.env\n)\n\n\ngatekeeper.approvalThreshold.dev.dev=45\ngatekeeper.approvalThreshold.dev.qa=44\ngatekeeper.approvalThreshold.dev.prod=-1\ngatekeeper.approvalThreshold.dev.test=4\n\ngatekeeper.approvalThreshold.support.dev=42\ngatekeeper.approvalThreshold.support.qa=41\ngatekeeper.approvalThreshold.support.prod=2\ngatekeeper.approvalThreshold.support.test=5\n\n\n\n\nThis tells Gatekeeper the following:\n1. For a developer role the maximum hours the user can request is:\n    - <= 45 for dev environment\n    - <= 44 for qa environment\n    - approval is \nalways\n required for prod\n    - <= 4 for test\n2. For a support role the maximum hours the user can request without requiring approval is:\n   - <= 42 hours for dev environment\n   - <= 41 for qa environment\n   - <= 2 for prod environment\n   - <= 5 for test environment\n\n\n\n\n\n\n\n\nProperty\n\n\nDescription\n\n\nType\n\n\n\n\n\n\n\n\n\n\ngatekeeper.approvalThreshold.dev.\n\n\nThe approval threshold for a given environment for the dev role\n\n\ninteger\n\n\n\n\n\n\ngatekeeper.approvalThreshold.support.\n\n\nThe approval threshold for a given environment for the support role\n\n\ninteger\n\n\n\n\n\n\n\n\nConfiguring SSM Documents\n\u00b6\n\n\nGatekeeper for EC2 resources requires SSM documents to be staged to AWS before being able to generate a temporary user. There are 4 different documents that Gatekeeper requires you to provide in order to Create and Delete temporary users. These documents are:\n\n\n\n\nCreate document for Linux \n\n\nDelete document for Linux\n\n\nCreate document for Windows\n\n\nDelete document for Windows\n\n\n\n\nWe provide examples of what we are currently using in our environment, you can find these documents located in the \naws/ssm\n folder; You ultimately have control of the content in these documents should you have differing requirements in your environment. \n\n\nIf you decide to write your own document, please keep in mind that gatekeeper will be passing on the following parameters to the documents. \n\n\nFor create documents (linux):\n1. \nuserName\n - Gatekeeper provides The Username for the temporary user. Currently gatekeeper provides this to the SSM document in the form of \ngk-$username\n\n2. \npublicKey\n - Gatekeeper generates the public key for the user and provides it to the SSM document\n3. \nexecutionTimeout\n - Gatekeeper provides The maximum time to wait for the script to succeed\n\n\nFor windows gatekeeper functions differently as we do not want to send the user password directly to SSM (these parameters get logged to the AWS console, so the password would be exposed which is insecure), instead we rely on SSM to generate the user password on the Windows box and have the box send the username and password directly to the requestor(s) \n\n\nFor create documents (windows):\n1. \nopsEmail\n - Gatekeeper provides the email of the operations team so that they are notified if any issue occurs \n2. \nteamEmail\n - Gatekeeper provides the team email to notify the team that supports gatekeeper if it encounters any issues\n3. \nuserId\n - Gatekeeper provides the User Id being added\n4. \nuserName\n - Gatekeeper provides the User Name being added\n5. \naccount\n - Gatekeeper provides the account the windows instance exists in\n6. \nmailFrom\n - Gatekeeper provides the sender of the email (who users of gatekeeper see the email is from)\n7. \nsmtpServer\n - \nYOU MUST PROVIDE THIS IN THE TEMPLATE\n the SMTP server that will be responsible for relaying the mail\n8. \nhours\n - Gatekeeper provides the amount of time the request is for\n9. \naccessRequest\n - Gatekeeper provides the access request ID \n10. \nexecutionTimeout\n - Gatekeeper provides The maximum time to wait for the script to succeed\n\n\nFor delete documents:\n1. \nuserName\n - Gatekeeper provides the Username for the temporary user that should be removed.\n2. \nexecutionTimeout\n - Gatekeeper provides the maximum time to wait for the script to succeed.\n\n\nFor convenience, we have provided SSM scripts with the script part left blank if you need to create your own script to set up a user / remove them. You can learn more about SSM \nhere\n\n\nThe following are configuration properties which tell gatekeeper which documents to run for which action:\n\n\n\n\n\n\n\n\nProperty\n\n\nDescription\n\n\nType\n\n\n\n\n\n\n\n\n\n\ngatekeeper.ssm.linux.create.documentName\n\n\nFor Linux: The name of the SSM document Gatekeeper will call to create a user\n\n\nstring\n\n\n\n\n\n\ngatekeeper.ssm.linux.create.timeout\n\n\nFor Linux: The Amount of time Gatekeeper should wait for the ssm create call to complete\n\n\ninteger\n\n\n\n\n\n\ngatekeeper.ssm.linux.create.waitInterval\n\n\nFor Linux: The Interval that Gatekeeper polls the SSM create for completion\n\n\ninteger\n\n\n\n\n\n\ngatekeeper.ssm.linux.delete.documentName\n\n\nFor Linux: The name of the SSM document Gatekeeper will call to delete a user\n\n\nstring\n\n\n\n\n\n\ngatekeeper.ssm.linux.delete.timeout\n\n\nFor Linux: The Amount of time Gatekeeper should wait for the ssm delete call to complete\n\n\ninteger\n\n\n\n\n\n\ngatekeeper.ssm.linux.delete.waitInterval\n\n\nFor Linux: The Interval that Gatekeeper polls the SSM delete for completion\n\n\ninteger\n\n\n\n\n\n\ngatekeeper.ssm.windows.create.documentName\n\n\nFor Windows: The name of the SSM document Gatekeeper will call to create a user\n\n\nstring\n\n\n\n\n\n\ngatekeeper.ssm.windows.create.timeout\n\n\nFor Windows: The Amount of time Gatekeeper should wait for the ssm create call to complete\n\n\ninteger\n\n\n\n\n\n\ngatekeeper.ssm.windows.create.waitInterval\n\n\nFor Windows: The Interval that Gatekeeper polls the SSM create for completion\n\n\ninteger\n\n\n\n\n\n\ngatekeeper.ssm.windows.delete.documentName\n\n\nFor Windows: The name of the SSM document Gatekeeper will call to delete a user\n\n\n\n\n\n\n\n\ngatekeeper.ssm.windows.delete.timeout\n\n\nFor Windows: The Amount of time Gatekeeper should wait for the ssm delete call to complete\n\n\ninteger\n\n\n\n\n\n\ngatekeeper.ssm.windows.delete.waitInterval\n\n\nThe Interval that Gatekeeper polls the SSM delete for completion\n\n\ninteger\n\n\n\n\n\n\n\n\nRDS\n\u00b6\n\n\nThese configurations are specific to Gatekeeper RDS\n\n\n\n\n\n\n\n\nProperty\n\n\nDescription\n\n\nType\n\n\n\n\n\n\n\n\n\n\ngatekeeper.db.schema\n\n\nThe schema in which gatekeeper operates its tables\n\n\nstring\n\n\n\n\n\n\ngatekeeper.requiredSecurityGroup\n\n\nThe Security Group in which Gatekeeper RDS requires for connectivity\n\n\nstring\n\n\n\n\n\n\ngatekeeper.rds.postgresMinServerVersion\n\n\nThe minimum postgrs server to use\n\n\nstring\n\n\n\n\n\n\ngatekeeper.rds.ssl\n\n\nWhether Gatekeeeper-RDS should use SSL or not to connect\n\n\nboolean\n\n\n\n\n\n\ngatekeeper.rds.connectTimeout\n\n\nThe timeout (in milliseconds) to wait for a connection\n\n\nInteger\n\n\n\n\n\n\ngatekeeper.rds.sslMode\n\n\nThe mode of SSL verification to use while Gatekeeper RDS connects to an instance\n\n\nstring\n\n\n\n\n\n\ngatekeeper.rds.sslCert\n\n\nThe SSL Cert to use for gatekeeper to connect (We provide the RDS cert)\n\n\nstring\n\n\n\n\n\n\ngatekeeper.rds.user\n\n\nThe gatekeeper user to log into the RDS instance.\n\n\nstring\n\n\n\n\n\n\ngatekeeper.rds.password\n\n\nThe password for the gatekeeper user\n\n\nstring\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nProperty\n\n\nDescription\n\n\nType\n\n\n\n\n\n\n\n\n\n\ngatekeeper.auth.approverGroup\n\n\nThe LDAP group containing Gatekeeper Approvers for RDS\n\n\nstring\n\n\n\n\n\n\ngatekeeper.auth.dbaGroupsPattern\n\n\nA regular expression to extract group(s) of DBAS from ldap groups, requires one capture\n\n\nstring\n\n\n\n\n\n\ngatekeeper.auth.opsGroupsPattern\n\n\nA regular expression to extract group(s) of Ops Members from ldap groups. requires one capture\n\n\nstring\n\n\n\n\n\n\ngatekeeper.auth.devGroupsPattern\n\n\nA regular expression to extract group(s) of Dev Members from ldap groups. requires one capture\n\n\nstring\n\n\n\n\n\n\n\n\nAPPROVALS\n\u00b6\n\n\nLike the EC2 service, the RDS approval criteria needs to be set, however this configuration is handled at a more granular level.\n\n\nHere is an example from \nconfig/rds_service_config.env\n \n\n\n    gatekeeper.approvalThreshold.dev.readonly.dev=120\n    gatekeeper.approvalThreshold.dev.readonly.qa=100\n    gatekeeper.approvalThreshold.dev.readonly.prod=-1\n\n    gatekeeper.approvalThreshold.dev.datafix.dev=180\n    gatekeeper.approvalThreshold.dev.datafix.qa=180\n    gatekeeper.approvalThreshold.dev.datafix.prod=-1\n\n    gatekeeper.approvalThreshold.dev.dba.dev=180\n    gatekeeper.approvalThreshold.dev.dba.qa=2\n    gatekeeper.approvalThreshold.dev.dba.prod=-1\n\n    gatekeeper.approvalThreshold.ops.readonly.dev=-1\n    gatekeeper.approvalThreshold.ops.readonly.qa=-1\n    gatekeeper.approvalThreshold.ops.readonly.prod=180\n\n    gatekeeper.approvalThreshold.ops.datafix.dev=-1\n    gatekeeper.approvalThreshold.ops.datafix.qa=-1\n    gatekeeper.approvalThreshold.ops.datafix.prod=1\n\n    gatekeeper.approvalThreshold.ops.dba.dev=-1\n    gatekeeper.approvalThreshold.ops.dba.qa=-1\n    gatekeeper.approvalThreshold.ops.dba.prod=-1\n\n    gatekeeper.approvalThreshold.dba.readonly.dev=180\n    gatekeeper.approvalThreshold.dba.readonly.qa=180\n    gatekeeper.approvalThreshold.dba.readonly.prod=180\n\n    gatekeeper.approvalThreshold.dba.datafix.dev=180\n    gatekeeper.approvalThreshold.dba.datafix.qa=180\n    gatekeeper.approvalThreshold.dba.datafix.prod=180\n\n    gatekeeper.approvalThreshold.dba.dba.dev=180\n    gatekeeper.approvalThreshold.dba.dba.qa=180\n    gatekeeper.approvalThreshold.dba.dba.prod=-1\n\n\nHere's an explanation of what this configuration translates to in Gatekeeper:\n\n\n\n\n\n\nFor Dev Role \n\n\n\n\nRequesting readonly\n\n\n< 120 days for dev environment\n\n\n< 180 days for qa environment\n\n\napproval is \nalways\n required for prod\n\n\n\n\n\n\nRequesting datafix\n\n\n<= 180 days for dev environment\n\n\n<= 180 days for qa environment\n\n\napproval is \nalways\n required for prod\n\n\n\n\n\n\nRequesting dba\n\n\n<= 180 days for dev environment\n\n\n<= 2 days for qa environment\n\n\napproval is \nalways\n required for prod\n\n\n\n\n\n\n\n\n\n\n\n\nFor Ops Role\n\n\n\n\nRequesting readonly\n\n\napproval is \nalways\n required for dev\n\n\napproval is \nalways\n required for qa\n\n\n<= 180 days for prod\n\n\n\n\n\n\nRequesting datafix\n\n\napproval is \nalways\n required for dev\n\n\napproval is \nalways\n required for qa\n\n\n<= 1 days for prod\n\n\n\n\n\n\nRequesting dba\n\n\napproval is \nalways\n required for dev\n\n\napproval is \nalways\n required for qa\n\n\napproval is \nalways\n required for prod\n\n\n\n\n\n\n\n\n\n\nFor DBA Role\n\n\nRequesting readonly\n\n\n<= 180 days for dev environment\n\n\n<= 180 days for qa environment\n\n\n<= 180 days for prod environment\n\n\n\n\n\n\nRequesting datafix\n\n\n<= 180 days for dev environment\n\n\n<= 180 days for qa environment\n\n\n<= 180 days for prod environment\n\n\n\n\n\n\nRequesting dba\n\n\n<= 180 days for dev environment\n\n\n<= 180 days for qa environment\n\n\napproval is \nalways\n required for prod\n\n\n\n\n\n\n\n\n\n\n\n\nYou can see the format for these properties below:\n\n\n\n\n\n\n\n\nProperty\n\n\nDescription\n\n\nType\n\n\n\n\n\n\n\n\n\n\ngatekeeper.approvalThreshold.dev.readonly.\n\n\nThe threshold in which devs can request readonly access before requiring approval\n\n\ninteger\n\n\n\n\n\n\ngatekeeper.approvalThreshold.dev.datafix.\n\n\nThe threshold in which devs can request datafix access before requiring approval\n\n\ninteger\n\n\n\n\n\n\ngatekeeper.approvalThreshold.dev.dba.\n\n\nThe threshold in which devs can request dba access before requiring approval\n\n\ninteger\n\n\n\n\n\n\ngatekeeper.approvalThreshold.ops.readonly.\n\n\nThe threshold in which ops can request readonly access before requiring approval\n\n\ninteger\n\n\n\n\n\n\ngatekeeper.approvalThreshold.ops.datafix.\n\n\nThe threshold in which ops can request readonly access before requiring approval\n\n\ninteger\n\n\n\n\n\n\ngatekeeper.approvalThreshold.ops.dba.\n\n\nThe threshold in which ops can request dba access before requiring approval\n\n\ninteger\n\n\n\n\n\n\ngatekeeper.approvalThreshold.dba.readonly.\n\n\nThe threshold in which dbas can request readonly access before requiring approval\n\n\ninteger\n\n\n\n\n\n\ngatekeeper.approvalThreshold.dba.datafix.\n\n\nThe threshold in which dbas can request readonly access before requiring approval\n\n\ninteger\n\n\n\n\n\n\ngatekeeper.approvalThreshold.dba.dba.\n\n\nThe threshold in which dbas can request readonly access before requiring approval\n\n\ninteger\n\n\n\n\n\n\ngatekeeper.overridePolicy.maxDays\n\n\nThe maximum amount of time a user can request temporary access for\n\n\ninteger\n\n\n\n\n\n\ngatekeeper.overridePolicy.\n.\n.\n\n\nfor a given user role, db role and environment, this Overrides the maximum amount of days a user can request temporary access for\n\n\ninteger",
            "title": "Configuration"
        },
        {
            "location": "/configuration/#configuration",
            "text": "Gatekeeper requires some configuration for it to run in your environment, see below for all of the supported configuration parameters",
            "title": "Configuration"
        },
        {
            "location": "/configuration/#global",
            "text": "These parameters are used by both the EC2 and RDS Gatekeeeper services",
            "title": "Global"
        },
        {
            "location": "/configuration/#authorization",
            "text": "Currently Gatekeeper only supports authorization through LDAP, the application expects authentication to be done via SSO, and looks for the username in a header.     Property  Description  Type      gatekeeper.auth.userIdHeader  The header in which gatekeeper looks to extract the authenticated user  string    gatekeeper.auth.ldap.isActiveDirectory  Whether your LDAP server is Microsoft Active Directory or not (Nested groups are not supported with Non-Active Directory LDAP servers)  boolean    gatekeeper.auth.ldap.objectClass  The Object class to look for users with (ex. posixAccount, person, user)  string    gatekeeper.auth.ldap.usersBase  The base in which the Users are stored on the LDAP Server (e.g. ou=Users,dc=example,dc=org)  string    gatekeeper.auth.ldap.userDn  The DN for the user that gatekeeper connects as to query ldap (e.g. cn=admin,dc=example,dc=org )  string    gatekeeper.auth.ldap.userPassword  The password to the ldap user  string    gatekeeper.auth.ldap.server  The domain of the LDAP server that gatekeeper should connect to  string    gatekeeper.auth.ldap.base  The base that LDAP calls will be made off of (e.g. dc=example,dc=org)  string    gatekeeper.auth.ldap.usersCnAttribute  The cn  string    gatekeeper.auth.ldap.usersIdAttribute  The uid  string    gatekeeper.auth.ldap.usersNameAttribute  The name  string    gatekeeper.auth.ldap.usersEmailAttribute  The email  string    gatekeeper.auth.ldap.usersDnAttribute  The dn  string    gatekeeper.auth.ldap.pattern  A regular expression that is used to extract group names from the LDAP results. The regular expression must have exactly one capture ( e.g developer_([A-Za-z0-9]+)_dev) pattern  string    gatekeeper.auth.ldap.groupsBase  The base where your groups are stored on your organization's LDAP server (e.g. ou=groups)  string",
            "title": "Authorization"
        },
        {
            "location": "/configuration/#aws",
            "text": "Property  Description  Type      gatekeeper.accountInfoEndpoint  The Endpoint gatekeeper calls to fetch the account data for all of your aws accounts  string    gatekeeper.accountInfoUri  The URI where gatekeeper can call your account Info service. (Defaults to \"accounts\")  string    gatekeeper.aws.proxyHost  (Optional) The Proxy Host. If you are not behind a proxy you can ignore this  string    gatekeeper.aws.proxyPort  (Optional) The Proxy Port. If you are not behind a proxy you can ignore this  integer    gatekeeper.aws.roleToAssume  The AWS IAM role that Gatekeeper will assume to interact with AWS (e.g. Xacnt_APP_GATEKEEPER)  string",
            "title": "AWS"
        },
        {
            "location": "/configuration/#email",
            "text": "Gatekeeper primarily communicates out temporary credentials via email, these are the properties gatekeeper requires for email     Property  Description  Type      gatekeeper.email.host  The host of your mail server  string    gatekeeper.email.port  The port that it runs on  integer    gatekeeper.email.from  The name of the Sender for Gatekeeper emails.  string    gatekeeper.email.team  The team that will be maintaining gatekeeper on your environment.  string    gatekeeper.email.approverEmails  The email address for the group who will be handling approvals  string    gatekeeper.email.opsEmails  The email address for gatekeeper to reach out to the Ops team  string",
            "title": "EMAIL"
        },
        {
            "location": "/configuration/#database",
            "text": "Property  Description  Type      gatekeeper.db.url  The Postgres Database URL to connect to  String    gatekeeper.db.port  The Port of the database  integer    gatekeeper.db.database  The name of the database  string    gatekeeper.db.ssl  Whether to enable SSL or not  boolean    gatekeeper.db.sslMode  The SSL mode to use  string    gatekeeper.db.sslCert  The SSL certificate location to use ( we provide the RDS cert in the container )  string    gatekeeper.db.user  The DB user to log in as  string    gatekeeper.db.password  The DB user password  string",
            "title": "DATABASE"
        },
        {
            "location": "/configuration/#ec2",
            "text": "These configurations are specific to Gatekeeper EC2",
            "title": "EC2"
        },
        {
            "location": "/configuration/#database_1",
            "text": "Property  Description  Type      gatekeeper.db.schema  The schema in which gatekeeper operates its tables  gatekeeper_ec2",
            "title": "DATABASE"
        },
        {
            "location": "/configuration/#authorization_1",
            "text": "Property  Description  Type      gatekeeper.auth.approverGroup  The LDAP group containing the gatekeeper approvers  string    gatekeeper.auth.supportGroup  The LDAP group containing the gatekeeper support staff  string",
            "title": "AUTHORIZATION"
        },
        {
            "location": "/configuration/#approvals",
            "text": "You will set these once for each environment you have in your company  Here's an example (taken from  config/ec2_service_config.env )  gatekeeper.approvalThreshold.dev.dev=45\ngatekeeper.approvalThreshold.dev.qa=44\ngatekeeper.approvalThreshold.dev.prod=-1\ngatekeeper.approvalThreshold.dev.test=4\n\ngatekeeper.approvalThreshold.support.dev=42\ngatekeeper.approvalThreshold.support.qa=41\ngatekeeper.approvalThreshold.support.prod=2\ngatekeeper.approvalThreshold.support.test=5  This tells Gatekeeper the following:\n1. For a developer role the maximum hours the user can request is:\n    - <= 45 for dev environment\n    - <= 44 for qa environment\n    - approval is  always  required for prod\n    - <= 4 for test\n2. For a support role the maximum hours the user can request without requiring approval is:\n   - <= 42 hours for dev environment\n   - <= 41 for qa environment\n   - <= 2 for prod environment\n   - <= 5 for test environment     Property  Description  Type      gatekeeper.approvalThreshold.dev.  The approval threshold for a given environment for the dev role  integer    gatekeeper.approvalThreshold.support.  The approval threshold for a given environment for the support role  integer",
            "title": "APPROVALS"
        },
        {
            "location": "/configuration/#configuring-ssm-documents",
            "text": "Gatekeeper for EC2 resources requires SSM documents to be staged to AWS before being able to generate a temporary user. There are 4 different documents that Gatekeeper requires you to provide in order to Create and Delete temporary users. These documents are:   Create document for Linux   Delete document for Linux  Create document for Windows  Delete document for Windows   We provide examples of what we are currently using in our environment, you can find these documents located in the  aws/ssm  folder; You ultimately have control of the content in these documents should you have differing requirements in your environment.   If you decide to write your own document, please keep in mind that gatekeeper will be passing on the following parameters to the documents.   For create documents (linux):\n1.  userName  - Gatekeeper provides The Username for the temporary user. Currently gatekeeper provides this to the SSM document in the form of  gk-$username \n2.  publicKey  - Gatekeeper generates the public key for the user and provides it to the SSM document\n3.  executionTimeout  - Gatekeeper provides The maximum time to wait for the script to succeed  For windows gatekeeper functions differently as we do not want to send the user password directly to SSM (these parameters get logged to the AWS console, so the password would be exposed which is insecure), instead we rely on SSM to generate the user password on the Windows box and have the box send the username and password directly to the requestor(s)   For create documents (windows):\n1.  opsEmail  - Gatekeeper provides the email of the operations team so that they are notified if any issue occurs \n2.  teamEmail  - Gatekeeper provides the team email to notify the team that supports gatekeeper if it encounters any issues\n3.  userId  - Gatekeeper provides the User Id being added\n4.  userName  - Gatekeeper provides the User Name being added\n5.  account  - Gatekeeper provides the account the windows instance exists in\n6.  mailFrom  - Gatekeeper provides the sender of the email (who users of gatekeeper see the email is from)\n7.  smtpServer  -  YOU MUST PROVIDE THIS IN THE TEMPLATE  the SMTP server that will be responsible for relaying the mail\n8.  hours  - Gatekeeper provides the amount of time the request is for\n9.  accessRequest  - Gatekeeper provides the access request ID \n10.  executionTimeout  - Gatekeeper provides The maximum time to wait for the script to succeed  For delete documents:\n1.  userName  - Gatekeeper provides the Username for the temporary user that should be removed.\n2.  executionTimeout  - Gatekeeper provides the maximum time to wait for the script to succeed.  For convenience, we have provided SSM scripts with the script part left blank if you need to create your own script to set up a user / remove them. You can learn more about SSM  here  The following are configuration properties which tell gatekeeper which documents to run for which action:     Property  Description  Type      gatekeeper.ssm.linux.create.documentName  For Linux: The name of the SSM document Gatekeeper will call to create a user  string    gatekeeper.ssm.linux.create.timeout  For Linux: The Amount of time Gatekeeper should wait for the ssm create call to complete  integer    gatekeeper.ssm.linux.create.waitInterval  For Linux: The Interval that Gatekeeper polls the SSM create for completion  integer    gatekeeper.ssm.linux.delete.documentName  For Linux: The name of the SSM document Gatekeeper will call to delete a user  string    gatekeeper.ssm.linux.delete.timeout  For Linux: The Amount of time Gatekeeper should wait for the ssm delete call to complete  integer    gatekeeper.ssm.linux.delete.waitInterval  For Linux: The Interval that Gatekeeper polls the SSM delete for completion  integer    gatekeeper.ssm.windows.create.documentName  For Windows: The name of the SSM document Gatekeeper will call to create a user  string    gatekeeper.ssm.windows.create.timeout  For Windows: The Amount of time Gatekeeper should wait for the ssm create call to complete  integer    gatekeeper.ssm.windows.create.waitInterval  For Windows: The Interval that Gatekeeper polls the SSM create for completion  integer    gatekeeper.ssm.windows.delete.documentName  For Windows: The name of the SSM document Gatekeeper will call to delete a user     gatekeeper.ssm.windows.delete.timeout  For Windows: The Amount of time Gatekeeper should wait for the ssm delete call to complete  integer    gatekeeper.ssm.windows.delete.waitInterval  The Interval that Gatekeeper polls the SSM delete for completion  integer",
            "title": "Configuring SSM Documents"
        },
        {
            "location": "/configuration/#rds",
            "text": "These configurations are specific to Gatekeeper RDS     Property  Description  Type      gatekeeper.db.schema  The schema in which gatekeeper operates its tables  string    gatekeeper.requiredSecurityGroup  The Security Group in which Gatekeeper RDS requires for connectivity  string    gatekeeper.rds.postgresMinServerVersion  The minimum postgrs server to use  string    gatekeeper.rds.ssl  Whether Gatekeeeper-RDS should use SSL or not to connect  boolean    gatekeeper.rds.connectTimeout  The timeout (in milliseconds) to wait for a connection  Integer    gatekeeper.rds.sslMode  The mode of SSL verification to use while Gatekeeper RDS connects to an instance  string    gatekeeper.rds.sslCert  The SSL Cert to use for gatekeeper to connect (We provide the RDS cert)  string    gatekeeper.rds.user  The gatekeeper user to log into the RDS instance.  string    gatekeeper.rds.password  The password for the gatekeeper user  string        Property  Description  Type      gatekeeper.auth.approverGroup  The LDAP group containing Gatekeeper Approvers for RDS  string    gatekeeper.auth.dbaGroupsPattern  A regular expression to extract group(s) of DBAS from ldap groups, requires one capture  string    gatekeeper.auth.opsGroupsPattern  A regular expression to extract group(s) of Ops Members from ldap groups. requires one capture  string    gatekeeper.auth.devGroupsPattern  A regular expression to extract group(s) of Dev Members from ldap groups. requires one capture  string",
            "title": "RDS"
        },
        {
            "location": "/configuration/#approvals_1",
            "text": "Like the EC2 service, the RDS approval criteria needs to be set, however this configuration is handled at a more granular level.  Here is an example from  config/rds_service_config.env        gatekeeper.approvalThreshold.dev.readonly.dev=120\n    gatekeeper.approvalThreshold.dev.readonly.qa=100\n    gatekeeper.approvalThreshold.dev.readonly.prod=-1\n\n    gatekeeper.approvalThreshold.dev.datafix.dev=180\n    gatekeeper.approvalThreshold.dev.datafix.qa=180\n    gatekeeper.approvalThreshold.dev.datafix.prod=-1\n\n    gatekeeper.approvalThreshold.dev.dba.dev=180\n    gatekeeper.approvalThreshold.dev.dba.qa=2\n    gatekeeper.approvalThreshold.dev.dba.prod=-1\n\n    gatekeeper.approvalThreshold.ops.readonly.dev=-1\n    gatekeeper.approvalThreshold.ops.readonly.qa=-1\n    gatekeeper.approvalThreshold.ops.readonly.prod=180\n\n    gatekeeper.approvalThreshold.ops.datafix.dev=-1\n    gatekeeper.approvalThreshold.ops.datafix.qa=-1\n    gatekeeper.approvalThreshold.ops.datafix.prod=1\n\n    gatekeeper.approvalThreshold.ops.dba.dev=-1\n    gatekeeper.approvalThreshold.ops.dba.qa=-1\n    gatekeeper.approvalThreshold.ops.dba.prod=-1\n\n    gatekeeper.approvalThreshold.dba.readonly.dev=180\n    gatekeeper.approvalThreshold.dba.readonly.qa=180\n    gatekeeper.approvalThreshold.dba.readonly.prod=180\n\n    gatekeeper.approvalThreshold.dba.datafix.dev=180\n    gatekeeper.approvalThreshold.dba.datafix.qa=180\n    gatekeeper.approvalThreshold.dba.datafix.prod=180\n\n    gatekeeper.approvalThreshold.dba.dba.dev=180\n    gatekeeper.approvalThreshold.dba.dba.qa=180\n    gatekeeper.approvalThreshold.dba.dba.prod=-1 \nHere's an explanation of what this configuration translates to in Gatekeeper:    For Dev Role    Requesting readonly  < 120 days for dev environment  < 180 days for qa environment  approval is  always  required for prod    Requesting datafix  <= 180 days for dev environment  <= 180 days for qa environment  approval is  always  required for prod    Requesting dba  <= 180 days for dev environment  <= 2 days for qa environment  approval is  always  required for prod       For Ops Role   Requesting readonly  approval is  always  required for dev  approval is  always  required for qa  <= 180 days for prod    Requesting datafix  approval is  always  required for dev  approval is  always  required for qa  <= 1 days for prod    Requesting dba  approval is  always  required for dev  approval is  always  required for qa  approval is  always  required for prod      For DBA Role  Requesting readonly  <= 180 days for dev environment  <= 180 days for qa environment  <= 180 days for prod environment    Requesting datafix  <= 180 days for dev environment  <= 180 days for qa environment  <= 180 days for prod environment    Requesting dba  <= 180 days for dev environment  <= 180 days for qa environment  approval is  always  required for prod       You can see the format for these properties below:     Property  Description  Type      gatekeeper.approvalThreshold.dev.readonly.  The threshold in which devs can request readonly access before requiring approval  integer    gatekeeper.approvalThreshold.dev.datafix.  The threshold in which devs can request datafix access before requiring approval  integer    gatekeeper.approvalThreshold.dev.dba.  The threshold in which devs can request dba access before requiring approval  integer    gatekeeper.approvalThreshold.ops.readonly.  The threshold in which ops can request readonly access before requiring approval  integer    gatekeeper.approvalThreshold.ops.datafix.  The threshold in which ops can request readonly access before requiring approval  integer    gatekeeper.approvalThreshold.ops.dba.  The threshold in which ops can request dba access before requiring approval  integer    gatekeeper.approvalThreshold.dba.readonly.  The threshold in which dbas can request readonly access before requiring approval  integer    gatekeeper.approvalThreshold.dba.datafix.  The threshold in which dbas can request readonly access before requiring approval  integer    gatekeeper.approvalThreshold.dba.dba.  The threshold in which dbas can request readonly access before requiring approval  integer    gatekeeper.overridePolicy.maxDays  The maximum amount of time a user can request temporary access for  integer    gatekeeper.overridePolicy. . .  for a given user role, db role and environment, this Overrides the maximum amount of days a user can request temporary access for  integer",
            "title": "APPROVALS"
        }
    ]
}